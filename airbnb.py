# -*- coding: utf-8 -*-
"""Airbnb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1meV-dNP3Xl7JJac9KMSCZ6Kjr1ROVRUe

# Importing nessecary libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""### Load the Dataset

"""

df=pd.read_excel('1730285881-Airbnb_Open_Data (2).xlsx')

"""# Display first 5 rows"""

df.head()

"""# Quick summary of dataset"""

df.info()

"""Check for duplicates"""

df.duplicated().value_counts()

df[df['neighbourhood group']=='brookln']

# drop duplicate values
df.drop_duplicates(inplace=True)

# drop house_rules and license columns with insufficient data
df.drop(['house_rules','license'], axis=1, inplace=True,errors='ignore')

# remove all commas in price and service fee columns, then convert to float
df['price'] = pd.to_numeric(df['price'].astype(str).str.replace(',', '', regex=False), errors='coerce')
df['service fee'] = pd.to_numeric(df['service fee'].astype(str).str.replace(',', '', regex=False), errors='coerce')

# Rename the price and service fee column to include a dollar sign
df.rename(columns={'price': 'price_$', 'service fee': 'service_fee$'}, inplace=True)

# drop all records with missing values
df.dropna(inplace=True)

# change all mismatched data types to the appropriate ones
df['price_$'] = df['price_$'].astype(float)
df['service_fee$'] = df['service_fee$'].astype(float)
df['id'] = df['id'].astype(int)
df['last review'] = pd.to_datetime(df['last review'], errors='coerce')
df['Construction year'] = df['Construction year'].astype(int)

# correct the spelling of 'brookln' to 'Brooklyn'
df.loc[df['neighbourhood group'] == 'brookln', 'neighbourhood group'] = 'Brooklyn'

# Get rid of outliers in the 'availability 365' column
df = df[df['availability 365'] <= 500]

df.duplicated().value_counts()

df.info()

"""Exploratory Data Analysis

"""

#summary statistcs
df.describe()

#different types of properties
property_types = df['room type'].value_counts().to_frame()
property_types

#room type count plotted on a bar chart
room_type_bar=plt.bar(property_types.index,property_types.loc[:,"count"])
plt.bar_label(room_type_bar,labels=property_types.loc[:,"count"],padding=4)
plt.ylim(0,500000)
plt.xlabel('Room Type')
plt.ylabel('Room Type Count')
plt.title('Property types and thier count in the dataset')
plt.show()

"""Which neighbourhood group has highest number of listings?

"""

hood_group=df['neighbourhood group'].value_counts().to_frame()
hood_group

#Which neighbourhood group has highest number of listings?
hood_group_bar=plt.bar(hood_group.index,hood_group.loc[:,"count"])
plt.bar_label(hood_group_bar,labels=hood_group.loc[:,"count"],padding=4)
plt.ylim(0,500000)
plt.xlabel('Neighbourhood Group')
plt.ylabel('Number of listings')
plt.xticks(rotation=45)
plt.title('Which neighbourhood group has highest number of listings?')

"""Which neighborhoods group have the highest average prices for Airbnb listings?"""

#Which neighborhoods group have the highest average prices for Airbnb listings?
avg_price = df.groupby('neighbourhood group')['price_$'].mean().sort_values(ascending = False).to_frame()
avg_price_bar = plt.bar(avg_price.index, avg_price.loc[:,'price_$'])
plt.bar_label(avg_price_bar, labels = round(avg_price.loc[:,'price_$'], 2), label_type = 'edge', padding = 4 );
plt.ylim([0,700])
plt.xlabel('Neighborhood Group');
plt.ylabel('Average Price per Listings ($)');
plt.xticks(rotation = 45);
plt.title('Average Price per Listings ($) in each Neighborhood Group');

"""Among the five identified neighborhood groups in the dataset, Queens boasts the highest average listing price at 630.5 USD, closely trailed by the Bronx with an average listing price of 630.2 USD. Conversely, Staten Island records the lowest average listing price at 622.13 USD

### Is there a relationship between the construction year of property and price?
"""

#Is there a relationship between the construction year of property and price?
df.groupby(df['Construction year'])['price_$'].mean().to_frame().plot();
plt.xlabel('Construction Year');
plt.ylabel('Average Price ($)');
plt.title('Average Price ($) for Properties in each Construction Year');

"""The plot shows the average price of Airbnb listings across different construction years. Based on the plot, it appears there isn't a strong linear relationship between the construction year and the average price. The average price fluctuates across the years, with some newer buildings having lower average prices than older ones, and vice versa. This suggests that other factors likely play a more significant role in determining the price of an Airbnb listing than just the construction year.

# Who are the top 10 hosts by calculated host listing count?

From the numerous hosts in the dataset, we will see the 10 hosts with the highest calculated host count.
"""

#Who are the top 10 hosts by calculated host listing count?
hosts = df.groupby('host name')['calculated host listings count'].sum().sort_values(ascending = False).nlargest(10).to_frame()
hosts_bar = plt.bar(hosts.index, hosts.loc[:, 'calculated host listings count']);
plt.bar_label(hosts_bar, label = hosts.loc[:, 'calculated host listings count'], label_type = 'edge', padding = 3);
plt.xlabel('Hosts Name');
plt.ylabel('Calculated Host Listings Count');
plt.xticks(rotation = 80);
plt.ylim([0, 120000]);
plt.title('Top 10 Hosts by Calculated host Listings Count');

"""The plot displays the top 10 hosts by calculated host listings count from the dataset. Each bar represents a host, labeled on the x-axis, with the corresponding count of listings shown above each bar. The y-axis indicates the number of listings, ranging from 0 to 120,000.

Top 10 Hosts and Listing Counts
Sonder (NYC): 111,921

Karen: 42,410

Jeniffer: 31,447

Blueground: 21,168

Kaz: 17,552

Corporate Housing: 14,833

Soya: 10,260

Stay With Vibe: 10,260

Kara: 10,092

Jeremy & Laura: 10,080

Sonder (NYC) has the largest count by a significant margin, followed by Karen and Jeniffer. The remaining hosts have progressively fewer listings, indicating a strong concentration of listings among the top few hosts

# **Are hosts with verified identities more likely to receive positive reviews**
"""

#Are hosts with verified identities more likely to receive positive reviews?
review = df.groupby('host_identity_verified')['review rate number'].mean().sort_values(ascending = False).to_frame()
review

review_bar = plt.bar(review.index, review.loc[:, "review rate number"]);
plt.bar_label(review_bar, labels = round(review.loc[:, "review rate number"], 2), padding = 4);
plt.ylim([0,4]);
plt.xlabel('Host Verification Status');
plt.ylabel('Average Review Rate Number');
plt.title('Average Review Rate for each Verification Statistics.');

"""Hosts with verified identities have a slightly higher average review rate number (3.00) than unconfirmed hosts (2.99)."""

base_color = sns.color_palette()[0]
sns.boxplot(data = df, x = "host_identity_verified", y = "review rate number", color = base_color);
plt.xlabel('Host Verification status');
plt.ylabel('Review Rate Number');
plt.title('Average Review Rate for each Verification Status');

"""The average review rates for verified and unconfirmed hosts are 3.27 and 3.28, respectively, indicating a marginal difference in their review rates, with unconfirmed hosts having a slightly higher rate. This suggests that verified hosts are not necessarily more likely to receive positive reviews compared to unconfirmed hosts

# Is there a correlation between the price of a listing and its service fee
"""

# Is there a correlation between the price of a listing and its service fee?
df['price_$'].corr(df['service_fee$'])

sns.regplot(df, x = 'price_$', y = 'service_fee$');
plt.xlabel('Price ($)');
plt.ylabel('Service Fee ($)');
plt.title('A Regression Plot showing the Correlation of the Price of a Listing and its Service Fee.');

"""The Pearson correlation coefficient between the price and service fee is 0.99, indicating a highly robust positive correlation between these variables. On the regression plot, each point forms a rising diagonal line towards the right, signifying that as the price of a property increases, so does its service fee

What is the average review rate number (e.g., stars) for listings, and does it vary based on the neighborhood group and room type?
"""

#What is the average review rate number (e.g., stars) for listings, and does it vary based on the neighborhood group and room type?
ARRN = df.groupby(['neighbourhood group', 'room type'])['review rate number'].mean().to_frame()
ARRN

plt.figure(figsize = [12,10]);
sns.barplot(data = df, x = 'neighbourhood group', y = 'review rate number', hue = 'room type');
plt.xlabel('Neighbourhood Group');
plt.ylabel('Average Review Rate');
plt.title('Average Review Rate for each Room/Property Type in each Neighbourhood Group.');

"""Hotel rooms exhibit has higher review rate compared to all other property types within the three neighborhood groups where they are located: Brooklyn, Manhattan, and Queens

# Are hosts with a higher calculated host listings count more likely to maintain higher availability throughout the year?
"""

#Are hosts with a higher calculated host listings count more likely to maintain higher availability throughout the year?
sns.regplot(df, x = 'calculated host listings count', y = 'availability 365');
plt.xlabel('Calculated Host Listings');
plt.ylabel('Availability 365');
plt.title('A Regression Plot of the Relationship between Calculated Host Listings Count and Availability 365');

df['calculated host listings count'].corr(df['availability 365'])

"""The Pearson correlation coefficient for the association between calculated host listings and availability 365 is 0.135, indicating a weak positive correlation between the two variables.

**Conclusion**

In conclusion, this project has provided a comprehensive analysis of the New York City Airbnb dataset, shedding light on various aspects of the short-term lodging market. Through data wrangling, exploratory data analysis (EDA), and interpretation of summary statistics, we've uncovered valuable insights into listing distribution, pricing dynamics, host, and review analysis.

Key findings include the dominance in counts of Entire home/apt listings, the variability in listing counts across neighborhood groups, and the downward trend between property construction year and price. Additionally, the analysis highlighted the significance of verified host status on review rates, as well as the strong correlation between listing price and service fee.

Furthermore, conducting sentiment analysis on guest reviews to understand factors driving customer satisfaction and preferences could inform targeted marketing strategies and product improvements for Airbnb. Lastly, expanding the analysis to include predictive modeling techniques, such as regression or machine learning algorithms, could enable forecasting of listing demand, pricing trends, and customer behavior, facilitating strategic decision-making for stakeholders in the short-term lodging industry.
"""